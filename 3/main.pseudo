main{
    t_curr=0
    curr_side=A
    lista_aktywnych_uav=pusta lista
    
    if(GUI:UAV1)
    {
        UAV1:status=tier2
        lista_aktywnych_uav.append(UAV1)
    }
    if(GUI:UAV2)
    {
        UAV2:status=tier2 
        lista_aktywnych_uav.append(UAV2)
    }
    if (lista_aktywnych_uav.size()==0)
    {
    
        print("STOP")
        STOP
    }

    if (GUI:Lh)
    {
        Lh:status="tier0"
        Rh:status="tier0"
    }
    if(Gui:Rh)
    {
        Rh:status="tier0"
    }


    zerowanie statystyk
    inicjalizacja tablicy zdarzen

    foreach uav in lista_aktywnych_uav
    {
        uav.planowanie_move_along()
    }

    if(start & vizualization )
    {
        planowanie_zdarzenia vizualization
    }

    1:   //etykieta goto
    aktualne_zdarzenie=znajdz najblizsze zdarzenie Tab_zadarzen
    t_curr=aktualne_zdarzenie:czas_wystapienia_zdarzenia
    aktualizacja_statystyk
    if(t_curr>T)
    {
        zapisz statystyki
        STOP
    }
    
    aktualizacja pozycji wszystkich elementow systemu

    aktualne_zdarzenie.obsluga_zdarzenia()
    kontrola czy jest jakas kolizja
    aktualizacja energii intruza
    aktualizacja punktacji
    if(jest kolizja or osiagnieto_limit_punktowy_intruza)
    {
        koniec symulacji
    }
    
    goto 1
    

}